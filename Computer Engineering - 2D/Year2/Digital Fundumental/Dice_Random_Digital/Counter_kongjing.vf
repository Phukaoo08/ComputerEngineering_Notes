////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Counter_kongjing.vf
// /___/   /\     Timestamp : 10/19/2020 22:06:45
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "D:/Computer Engineering/Year2/Digital Fundumental/Dice_Random_Digital/Counter_kongjing.vf" -w "D:/Computer Engineering/Year2/Digital Fundumental/Dice_Random_Digital/Counter_kongjing.sch"
//Design Name: Counter_kongjing
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CD4RE_HXILINX_Counter_kongjing(CEO, Q0, Q1, Q2, Q3, TC, C, CE, R);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      R;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C)
     begin
	if (R)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1, Q0} <= {Q3, Q2, Q1, Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = R ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module Counter_kongjing(CSC_DIV, 
                        Counter1_1, 
                        Counter1_2, 
                        Counter1_3, 
                        Counter1_4, 
                        Counter2_1, 
                        Counter2_2, 
                        Counter2_3, 
                        Counter2_4);

    input CSC_DIV;
   output Counter1_1;
   output Counter1_2;
   output Counter1_3;
   output Counter1_4;
   output Counter2_1;
   output Counter2_2;
   output Counter2_3;
   output Counter2_4;
   
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_28;
   
   VCC  XLXI_3 (.P(XLXN_2));
   GND  XLXI_4 (.G(XLXN_4));
   (* HU_SET = "XLXI_5_20" *) 
   CD4RE_HXILINX_Counter_kongjing  XLXI_5 (.C(CSC_DIV), 
                                          .CE(XLXN_2), 
                                          .R(XLXN_4), 
                                          .CEO(), 
                                          .Q0(Counter1_1), 
                                          .Q1(Counter1_2), 
                                          .Q2(Counter1_3), 
                                          .Q3(Counter1_4), 
                                          .TC(XLXN_28));
   (* HU_SET = "XLXI_6_21" *) 
   CD4RE_HXILINX_Counter_kongjing  XLXI_6 (.C(XLXN_28), 
                                          .CE(XLXN_2), 
                                          .R(XLXN_4), 
                                          .CEO(), 
                                          .Q0(Counter2_1), 
                                          .Q1(Counter2_2), 
                                          .Q2(Counter2_3), 
                                          .Q3(Counter2_4), 
                                          .TC());
endmodule
