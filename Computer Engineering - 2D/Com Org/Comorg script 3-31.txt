สไลด์ที่ 31 จากการที่เราคอมไพล์ เเล้วก็เเอสเซมเบิ้ลโปรเเกรมส์ซอสโค้ดของเรานะครับ ในสไลด์ก่อนหน้านี้
เราก็จะได้ออบเจ็คไฟล์มา

ขั้นต่อไปก็คือ เราจะทำการลิงค์รวมออบเจ็คไฟล์ต่างๆ โดยที่ผมจะอธิบายขั้นตอนทางซ้ายก่อนนะครับ

ให้เห็นภาพรวม เเล้วเดี๋ยวเราจะลงรายละเอียดทางขวานะครับ

เมื่อเราได้เเอ๊ดออปเจคไฟล์มาเเล้วนะครับ เราก็จะลิงค์ ลิงค์เเล้วเราก็จะได้ executable fileนะครับ
นี่ก็คือภาพรวม

execuatable เหมือนที่ผมพูดไปเเล้วก็คือ เป็น format ของ ELF
เเล้วผมก็จะซูมเข้าไปทางด้านขวา

ใน object file นะครับ นี่คือ .o นี่ก็คือ .o นี่ก็เป็น lib นะครับ หรืออาจจะเป็น .etc นะครับ
ที่เป็น library นะครับ 

งั้นอันนี้ชื่อไฟล์ สมมุติว่าเป็นชื่อ main.o นะครับ อันนี้คือชื่ออีกชื่อหนึ่ง อาจจะชื่อว่า funct.o 

ในไฟล์พวกนี้นะครับ จริงๆเเล้วเป็นเลขอะไรครับ? เป็นเลขฐานสอง

ข้างในนี้ มีเลขฐานสองเต็มไปหมดเลยนะครับ เต็มไปด้วยเลขฐานสอง

เเต่มันไม่มีประโยนช์อะไรที่เราจะไปอ่านเลขฐานสองนะครับ

เเต่เราจะมีประโยชน์มากกว่าถ้าเราเห็นเป็นเเบบ Assembly นะครับ

เราจะเห็นเป็นชื่อฟังก์ชั่น main เห็นไหมครับ?

นี่คือบริเวณที่เราเรียกว่าอะไรครับ จำได้ไหม?  text segment นะครับ

ตรงนี้ก็เป็น text segment(ของอีกไฟล์หนึ่ง) 

ตรงนี้ก็เป็น text segment(ของอีกไฟล์หนึ่ง) 

เพราะฉะนั้น คำสั่ง Bl printf นะครับ เดี๋ยวเราก็จะไปเรียนในบทที่ 4 ว่าคำสั่ง Bl ก็คือการเรียกใช้ฟังก์ชัน

เรียกใช้ฟังก์ชั่นนะครับ เรียกใช้ฟังก์ชั่นที่ชื่อว่า printf นะครับ

ถ้าพวกเรารู้จักคำสั่ง printf

printf อยู่ในไหน? printf อยู่ใน c library นะครับ ถูกกำหนดอยู่ใน stdio.h ของภาษา C

printf ก็จะถูกพัฒนาเเยกต่างหาก เราไม่จำเป็นต้องไปพัฒนา printf เอง

เราในฐานะโปรเเกรมเมอร์ เราก็เรียกใช้คำสั่ง printf

เมื่อเราเเปลจาก main.c เป็น Assembly เราก็จะเห็นเป็นคำสั่ง Bl printf นะครับ

Bl ก็เป็นคำสั่งเรียกใช้ฟังก์ชันใน Assembly เป็นภาษา Assembly

ขอโทษครับ เป็นคำสั่ง Assembly คำสั่งหนึ่งนะครับ 

เเล้วโปรเเกรมก็ทำงานไป....(สักพักหนึ่ง)  เเล้วก็ไปเรียกใช้ฟังก์ชั่นที่ชื่อว่า funct

ฟังก์ชันนี้อยู่ใน object file อีกตัวหนึ่ง

เราสามารถพัฒนา object file หลายๆไฟล์เเยกกันได้นะครับ

อันนี้ก็มาจากไฟล์ที่ชื่อว่า funct.c ก็ได้

เราก็จะพัฒนาเเยก คนหนึ่งก็พัฒนาอีกเเบบ

Programmer A พัฒนาไฟล์นี้ Programmer B พัฒนาไฟล์นี้

ก็จะสามารถที่จะเเยกกันพัฒนาได้ เเล้วมารวมกันเป็น Executable file อันเดียวกันได้

โอเคนะครับ 

ทำนองเดียวกัน เราก็จะใช้คำสั่ง Bl ตามด้วยชื่อฟังก์ชัน 

เราก็สามารถที่จะเชื่อมรวมกันเป็นอะไรครับ?

ในรูปด้านล่างก็คือ เป็น .text เดียวกัน

เป็น text segment เดียวกัน

ในนี้ก็มีคำสั่งเลขฐานสองเต็มไปหมดเลย เป็นเลขฐานสองนะครับ

เเต่ว่าเราเขียนให้คุณเห็นเป็น Assembly เท่านั้นเองนะครับ

text segment ก็จะไปรวมอยู่ที่พื้นที่ตรงนี้ของ executable file ตรงนี้

ด้วย format เหมือนเดิมก็คือ ELF format

โอเคนะครับ นี่ก็คือขบวนการลิงค์ ที่ผมต้องการจะอธิบายให้เราเห็นภาพนะครับ

ในลักษณะเดียวกันก็คือ การลิงค์ก็รวม data segment ที่ผมไม่ได้เเสดง ก็ไปรวมอยู่ใน data segment ของไฟล์
ELF เพียงเเต่เราไม่ได้เเสดงให้คุณเห็นเท่านั้นเอง

OK kubbb
